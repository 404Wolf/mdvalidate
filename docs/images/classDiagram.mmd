classDiagram
    class ValidationZipperTree {
        +Mutex<Parser> input_tree
        +Mutex<Parser> schema_tree
        +Mutex<u32> last_input_tree_offset
        +Mutex<u32> last_schema_tree_offset
        +ValidatorState state
        +walk_node()
        +walk_to_last_node()
        +receive_input(new_input_str: &str)
        -finish() Result<ValidationResults, ValidationError>
    }

    class ValidatorState {
        <<enum>>
        BEGIN
        WAITING
        TERMINATED
    }

    class Validator {
        +validate(opts: Options)
        +new(readable: Readable)
        -validation_zipper: ValidationZipperTree
    }

    class Options {
        +bool fast_fail
    }

    class Readable {
        <<trait>>
        +read() String
    }

    class ValidationResults {
        +Report report
        +bool pass
    }

    class Report {
        +ariadne::Report report
    }

    class ValidationError {
        <<struct>>
        +message: String
        +location: Option<u32>
    }

    Validator --> ValidationZipperTree : owns
    Validator --> Options : uses
    Validator --> Readable : constructed from
    ValidationZipperTree --> ValidationResults : returns
    ValidationZipperTree --> ValidationError : returns
    ValidationResults --> `Report` : contains
